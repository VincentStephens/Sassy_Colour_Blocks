/* Welcome to Compass.
 * In this file you should write your main styles. (or centralize your imports)
 * Import this file using the following HTML or equivalent:
 * <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css" /> */

@import "compass/reset";
@import "compass/css3";
@import "compass/utilities";

// provide base of 10 for rem (root em) measurment (content / context )
//html { font-size: 10px; }


//property nesting
body {
    font: {
    family: 'Open Sans', serif;
    weight: 100;
    }
}

h2 {
    font-size: 0.6em;
    margin: 0.2em 0; 
}

#main {
    max-width:960px;
    margin: auto;
}

    .button { margin: 1em;}

    a {color: #7baedc; text-decoration: none;}
    a:hover {color: #93df7d; }

header {
    padding: 0.5em;
    background-color: #fff;
    margin: 0.5em 0;
    div.bg-picker { width: 210px; margin-right: 1em; float: left;}
    div.block-picker { width: 210px; float: left;}
    div.bg-sample { width: 210px; height: 200px; float: left;}
    div.b-sample { width: 201px; height: 200px; float: left;}
}

// - color blocks with css

$borderColor: #C6C6C6;
$startColor-bg: #a932c7;
$startColor-b: #3289c7;


#colors {
    z-index: 0;
    background-color: $startColor-bg;
    font: {
        size: 0.4em;
    }
}


.colorBlock{
    // Starting colour
    background-color: $startColor-b;
    height: 100px;
    width: 100px;
    display: block;
    float: left;
    border: 0px $borderColor solid;
    margin: 10px;

    z-index: 10;
}

@mixin colorBlocks($lighten: 1) {
    background-color:  $lighten;
}

// #colorBlocks1 {
//     @for $i from 1 through 8 {
//         & div:nth-child(#{$i}) {
//             @include colorBlocks($i * 10 );
//         }
//     }
// }

#colorBlocks0 {
    .colorBlock{
        opacity: 0.1;
    }
}

#colorBlocks0 {
    @for $i from 1 through 8 {
        & div:nth-child(#{$i}) {
            @include colorBlocks($i * 10 );
        }
    }
}

#colorBlocks1 {
    .colorBlock{
        opacity: 0.2;
    }
}

#colorBlocks2 {
    .colorBlock{
        opacity: 0.3;
    }
}

#colorBlocks3 {
    .colorBlock{
        opacity: 0.4;
    }
}

#colorBlocks4 {
    .colorBlock{
        opacity: 0.5;
    }
}

#colorBlocks5 {
    .colorBlock{
        opacity: 0.6;
    }
}

#colorBlocks6 {
    .colorBlock{
        opacity: 0.7;
    }
}

#colorBlocks7 {
    .colorBlock{
        opacity: 0.8;
    }
}

#colorBlocks8 {
    .colorBlock{
        opacity: 0.9;
    }
}

#colorBlocks9 {
    .colorBlock{
        opacity: 1;
    }
}

#colorBlocks0 {
    .colorBlock:hover{
        -webkit-filter: invert(100%);
        filter: invert(100%);
    }
}

#colorBlocks1 {
    .colorBlock:hover{
        -webkit-filter: invert(100%);
        filter: invert(100%);
    }
}

#colorBlocks2 {
    .colorBlock:hover{
        -webkit-filter: invert(100%);
        filter: invert(100%);
    }
}

#colorBlocks3 {
    .colorBlock:hover{
        -webkit-filter: invert(100%);
        filter: invert(100%);
    }
}

#colorBlocks4 {
    .colorBlock:hover{
        -webkit-filter: invert(100%);
        filter: invert(100%);
    }
}

#colorBlocks5 {
    .colorBlock:hover{
        -webkit-filter: invert(100%);
        filter: invert(100%);
    }
}

#colorBlocks6 {
    .colorBlock:hover{
        -webkit-filter: invert(100%);
        filter: invert(100%);
    }
}

#colorBlocks7 {
    .colorBlock:hover{
        -webkit-filter: invert(100%);
        filter: invert(100%);
    }
}

#colorBlocks8 {
    .colorBlock:hover{
        -webkit-filter: invert(100%);
        filter: invert(100%);
    }
}

#colorBlocks9 {
    .colorBlock:hover{
        -webkit-filter: invert(100%);
        filter: invert(100%);
    }
}


@mixin colorBlocksHover($backgroundColor: green, $lighten: 1) {
    background-color: invert($backgroundColor) + $lighten;
}

.images {
    position: relative;
    display: block;
}
img[src$=".jpg"] {
    border: solid 1px white;
}
img[src$=".jpg"]:hover {
    border: solid 1px red;
}

.b {
    display: none;
    position: absolute;
}
.a {
    position: absolute;
}
.a:hover + .b {
    display: block;
}


.headingSelector > h1 {
    color: green;
}

.headingSelector > div h1 {
    color: blue;
}

.headingSelector2 p + h1 {
    color: orange;
}

h2:target {
    background-color: yellow;
}


//Variables DRY - dont repeat your self
$mainColor: green;
$documentSize: 114rem;
$sidebarTop: 5rem;
$sidebarBottom: 8rem; 

// Maths

$sidebarHeight: $sidebarBottom + $sidebarTop;

.sidebar {
    padding: 1rem;
    background-color: $mainColor;
    width: 250px;
    
    height: $sidebarHeight;
    .sidebarTop {
    height: $sidebarTop;
    background-color: lighten($mainColor, 10);
    }
    .sidebarBottom {
    height: $sidebarBottom;
    background-color: lighten($mainColor, 20);
    }
}

// mixins
// $mainColor: green;

@mixin block {
    background-color: $mainColor;
    height: 100px;
    width: 200px;
    border: solid 1px black;
}

.block1 {
    @include block;
}

// Operators
$myColor: red;
$mainBorderSize: 5px;

//mixins with arguments
@mixin customBorder($width, $color, $style) {
    border: {
        width: $width;
        color: $color;
        style: $style;
    }
}

@mixin paragraphStyles($size, $color, $lineHeight) {
    font: {
        size: $size;
        color: $color;
        line-height: $lineHeight;
    }
    &:first-letter {
        font-size: ($size + 4);
        color: darken($color, 1);
    }
}

// mixin with default values
@mixin paragraphStyles2($size: 1em, $color: orange, $lineHeight: 1em) {
    font: {
        size: $size;
        color: $color;
        line-height: $lineHeight;
    }
    &:first-letter {
        font-size: ($size + 4);
        color: darken($color, 20);
    }
}

// functions

@mixin blockColor($mainColor: green) {
    background-color: rgba($mainColor, 0.5);
    height: 100px;
    width: 200px;
    border: solid 1px black;
}

.block8 {
    @include blockColor(orange);
    
}

